STUPID

save as file
image layer that has is an embedded image
test browser support (and provide appropriate taxes)
//could be a "map" filter?
//overlap option (see wandering lines)
//brightness tolerance
"no layers exist" text
decompress thing for save repair
//color ramp
//variables and math expressions
option limit skeletons (for documentation)
better width and height customization (set limit, with warning)
proper negative offs
make loading more safe (test ways to break / exploit saving)
  save format is not finalized, do this way later
  less cryptic error messages
palette
HILARIOUS parody logos!
list of controls
fix tiling for worley (none powers of 2)
PBR material creation (???)
remove some mix types? a couple of them feel like filler
bring back direction inputs!!!
rotate filter
quantize filter
contrast filter (can be achieved with a tweak layer set to canvas with the overlay blend mode)
make a not-wandering layer
disable corners or edges
merge liney and noise layers? a lot of their options are awfully similar...
mix options for the blobs layer (col0 -> col1)
embed pdimg data into a png, have that png be from procedraw (static, obviously) but have that png be able to be loaded into procedraw

URGENT

ctrl + scroll to zoom in and out
scroll to move up and down
shift + scroll to move left and right
blend types for layer interpolation (e.g. border corners, vornoi noise) "mix types"
value noise layer
perlin noise layer
//img.blend function is broken! when the col1 alpha smaller than col0 thing look weird
edit tint switch layer dont switch color edit color SEE BUG
more accurate layer icons
proper direction input... again!
the code is getting stale! rewrite it soon....
merge the blend modes and mix modes? some of them are quite similar in purpose and functionality...
make controls more visible on mobile (see: firefox device simulation mode)
proper layer icons
anti aliasing for blobs layer
sharpen filter
blur filter
saturation OR black and white filter
actual documentation / tutorials

round and sharp easing function
repurpose unfinished maps as a ttt map???

normalize filter - scales a layer's brightness to between 0 and 1

restructure code to allow for the image/layer renderer to be used on it's own (without the editor). people (kit) have told me that procedraw could be useful for html5 game textures.....
  layer wrappers

REMINDERS

clean up unused garbage
//DONT SLAP MORE SHIT ONTO SHIT
//the set color function sucked it was like 4 times slower
//take a break! work on the programmer art thing
//snap! image editor
fix layer key bugs! there's still a bunch.....

is the "color picker style" code too voodoolicious? would it be too confusing for someone unfamiliar with those functions, even if they learned about them? is it unecessary abstraction?

floating point bitwise operators? could be interesting